{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiSliceActions } from \"./uiSlice\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cartContent: [{\n      title: \"test \",\n      quantity: 1,\n      total: 6,\n      price: 6,\n      id: 1\n    }],\n    totalQuantity: 1\n  },\n  reducers: {\n    addToCart(state, action) {\n      state.cartContent = [...state.cartContent, action.payload];\n    },\n\n    addQuantity(state, action) {\n      state.cartContent.forEach(el => {\n        if (el.id === action.payload) {\n          el.quantity++;\n          el.total = el.quantity * el.price;\n        }\n      });\n    },\n\n    subQuantity(state, action) {\n      state.cartContent.forEach(el => {\n        if (el.id === action.payload) {\n          el.quantity--;\n          el.total = el.quantity * el.price;\n        }\n      });\n    },\n\n    removeItem(state, action) {\n      state.cartContent = state.cartContent.filter(el => !(el.id === action.payload));\n    },\n\n    finalQuantaty(state) {\n      state.totalQuantity = state.cartContent.reduce((total, el) => total + el.quantity, 0);\n    }\n\n  }\n});\nexport const sendData = cartContent => {\n  return dispatch => {\n    const sendData2 = async () => {\n      dispatch(uiSliceActions.showNotification({\n        status: \"pending\",\n        title: \"loading...\",\n        message: \"wating for order to excute\"\n      }));\n      const responce = await fetch(\"https://react2-fe651-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cartContent)\n      });\n\n      if (!responce.ok) {\n        throw new Error(\"something went rong\");\n      }\n\n      dispatch(uiSliceActions.showNotification({\n        status: \"success\",\n        title: \"successed\",\n        message: \"your order is successed\"\n      }));\n    };\n\n    sendData2().catch(message => {\n      dispatch(uiSliceActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: 'something went rong'\n      }));\n    });\n  };\n};\nexport const cartSliceActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","uiSliceActions","cartSlice","name","initialState","cartContent","title","quantity","total","price","id","totalQuantity","reducers","addToCart","state","action","payload","addQuantity","forEach","el","subQuantity","removeItem","filter","finalQuantaty","reduce","sendData","dispatch","sendData2","showNotification","status","message","responce","fetch","method","body","JSON","stringify","ok","Error","catch","cartSliceActions","actions","reducer"],"sources":["C:/Users/user/Desktop/react/crr5/hamad26/src/store/cartMangeSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiSliceActions } from \"./uiSlice\";\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    cartContent: [{ title: \"test \", quantity: 1, total: 6, price: 6, id: 1 }],\r\n    totalQuantity: 1,\r\n  },\r\n  reducers: {\r\n    addToCart(state, action) {\r\n      state.cartContent = [...state.cartContent, action.payload];\r\n    },\r\n    addQuantity(state, action) {\r\n      state.cartContent.forEach((el) => {\r\n        if (el.id === action.payload) {\r\n          el.quantity++;\r\n          el.total = el.quantity * el.price;\r\n        }\r\n      });\r\n    },\r\n    subQuantity(state, action) {\r\n      state.cartContent.forEach((el) => {\r\n        if (el.id === action.payload) {\r\n          el.quantity--;\r\n          el.total = el.quantity * el.price;\r\n        }\r\n      });\r\n    },\r\n    removeItem(state, action) {\r\n      state.cartContent = state.cartContent.filter(\r\n        (el) => !(el.id === action.payload)\r\n      );\r\n    },\r\n    finalQuantaty(state){\r\n        state.totalQuantity=state.cartContent.reduce((total,el)=>total+el.quantity,0)\r\n    }\r\n  },\r\n});\r\n\r\nexport const sendData=(cartContent)=>{\r\n    return (dispatch)=>{\r\n        const sendData2 = async () => {\r\n            dispatch(\r\n              uiSliceActions.showNotification({\r\n                status: \"pending\",\r\n                title: \"loading...\",\r\n                message: \"wating for order to excute\",\r\n              })\r\n            );\r\n            const responce = await fetch(\r\n              \"https://react2-fe651-default-rtdb.firebaseio.com/cart.json\",\r\n              {\r\n                method: \"PUT\",\r\n                body: JSON.stringify(cartContent),\r\n              }\r\n            );\r\n            if (!responce.ok) {\r\n              throw new Error(\"something went rong\");\r\n            }\r\n            dispatch(\r\n              uiSliceActions.showNotification({\r\n                status: \"success\",\r\n                title: \"successed\",\r\n                message: \"your order is successed\",\r\n              })\r\n            );\r\n          };\r\n       \r\n          sendData2().catch((message) => {\r\n            dispatch(\r\n              uiSliceActions.showNotification({\r\n                status: \"error\",\r\n                title: \"Error\",\r\n                message:'something went rong',\r\n              })\r\n            );\r\n          });\r\n    }\r\n}\r\nexport const cartSliceActions = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}