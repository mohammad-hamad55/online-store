{"ast":null,"code":"import { uiSliceActions } from \"./uiSlice\";\nimport { cartSliceActions } from \"./cartMangeSlice\";\nexport const sendData = cartContent => {\n  return dispatch => {\n    const sendData2 = async () => {\n      dispatch(uiSliceActions.showNotification({\n        status: \"pending\",\n        title: \"loading...\",\n        message: \"wating for order to excute\"\n      }));\n      const responce = await fetch(\"https://react2-fe651-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cartContent)\n      });\n\n      if (!responce.ok) {\n        throw new Error(\"something went rong\");\n      }\n\n      dispatch(uiSliceActions.showNotification({\n        status: \"success\",\n        title: \"successed\",\n        message: \"your order is successed\"\n      }));\n      setTimeout(() => {\n        dispatch(uiSliceActions.showNotification(false));\n      }, 1000);\n    };\n\n    sendData2().catch(message => {\n      dispatch(uiSliceActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: 'something went rong'\n      }));\n    });\n  };\n};\nexport const fetchData = () => {\n  return dispatch => {\n    const fetchData2 = async () => {\n      const responce = await fetch('https://react2-fe651-default-rtdb.firebaseio.com/cart.json');\n\n      if (!responce.ok) {\n        throw new Error('somthing went wrong');\n      }\n\n      const data = await responce.json();\n      dispatch(cartSliceActions.replace(data));\n      dispatch(cartSliceActions.finalQuantaty());\n    };\n\n    fetchData2().catch(error => {\n      dispatch(uiSliceActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: 'something went rong'\n      }));\n    });\n  };\n};","map":{"version":3,"names":["uiSliceActions","cartSliceActions","sendData","cartContent","dispatch","sendData2","showNotification","status","title","message","responce","fetch","method","body","JSON","stringify","ok","Error","setTimeout","catch","fetchData","fetchData2","data","json","replace","finalQuantaty","error"],"sources":["C:/Users/user/Desktop/react/Online Store Project/online-store-project/src/store/cartActionCreators.js"],"sourcesContent":["import { uiSliceActions } from \"./uiSlice\";\r\nimport { cartSliceActions } from \"./cartMangeSlice\";\r\nexport const sendData=(cartContent)=>{\r\n    return (dispatch)=>{\r\n        const sendData2 = async () => {\r\n            dispatch(\r\n              uiSliceActions.showNotification({\r\n                status: \"pending\",\r\n                title: \"loading...\",\r\n                message: \"wating for order to excute\",\r\n              })\r\n            );\r\n            const responce = await fetch(\r\n              \"https://react2-fe651-default-rtdb.firebaseio.com/cart.json\",\r\n              {\r\n                method: \"PUT\",\r\n                body: JSON.stringify(cartContent),\r\n              }\r\n            );\r\n            if (!responce.ok) {\r\n              throw new Error(\"something went rong\");\r\n            }\r\n            dispatch(\r\n              uiSliceActions.showNotification({\r\n                status: \"success\",\r\n                title: \"successed\",\r\n                message: \"your order is successed\",\r\n              })\r\n            );\r\n          setTimeout(()=>{\r\n            dispatch(\r\n              uiSliceActions.showNotification(false)\r\n            );\r\n          },1000)\r\n\r\n          };\r\n       \r\n          sendData2().catch((message) => {\r\n            dispatch(\r\n              uiSliceActions.showNotification({\r\n                status: \"error\",\r\n                title: \"Error\",\r\n                message:'something went rong',\r\n              })\r\n            );\r\n          });\r\n    }\r\n}\r\n\r\n export const fetchData=()=>{\r\n    return (dispatch)=>{\r\n        const fetchData2=async()=>{\r\n           const responce=await fetch('https://react2-fe651-default-rtdb.firebaseio.com/cart.json');\r\n           if(!responce.ok){\r\n            throw new Error('somthing went wrong');\r\n           }\r\n\r\n           const data= await responce.json();\r\n       \r\n           dispatch(cartSliceActions.replace(data));\r\n           dispatch(cartSliceActions.finalQuantaty());\r\n\r\n\r\n        }\r\n        fetchData2().catch(error=>{\r\n            dispatch(\r\n                uiSliceActions.showNotification({\r\n                  status: \"error\",\r\n                  title: \"Error\",\r\n                  message:'something went rong',\r\n                })\r\n              );\r\n        });\r\n    }\r\n}"],"mappings":"AAAA,SAASA,cAAT,QAA+B,WAA/B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,OAAO,MAAMC,QAAQ,GAAEC,WAAD,IAAe;EACjC,OAAQC,QAAD,IAAY;IACf,MAAMC,SAAS,GAAG,YAAY;MAC1BD,QAAQ,CACNJ,cAAc,CAACM,gBAAf,CAAgC;QAC9BC,MAAM,EAAE,SADsB;QAE9BC,KAAK,EAAE,YAFuB;QAG9BC,OAAO,EAAE;MAHqB,CAAhC,CADM,CAAR;MAOA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4DAD0B,EAE1B;QACEC,MAAM,EAAE,KADV;QAEEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,WAAf;MAFR,CAF0B,CAA5B;;MAOA,IAAI,CAACO,QAAQ,CAACM,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;MACD;;MACDb,QAAQ,CACNJ,cAAc,CAACM,gBAAf,CAAgC;QAC9BC,MAAM,EAAE,SADsB;QAE9BC,KAAK,EAAE,WAFuB;QAG9BC,OAAO,EAAE;MAHqB,CAAhC,CADM,CAAR;MAOFS,UAAU,CAAC,MAAI;QACbd,QAAQ,CACNJ,cAAc,CAACM,gBAAf,CAAgC,KAAhC,CADM,CAAR;MAGD,CAJS,EAIR,IAJQ,CAAV;IAMC,CA/BH;;IAiCED,SAAS,GAAGc,KAAZ,CAAmBV,OAAD,IAAa;MAC7BL,QAAQ,CACNJ,cAAc,CAACM,gBAAf,CAAgC;QAC9BC,MAAM,EAAE,OADsB;QAE9BC,KAAK,EAAE,OAFuB;QAG9BC,OAAO,EAAC;MAHsB,CAAhC,CADM,CAAR;IAOD,CARD;EASL,CA3CD;AA4CH,CA7CM;AA+CN,OAAO,MAAMW,SAAS,GAAC,MAAI;EACxB,OAAQhB,QAAD,IAAY;IACf,MAAMiB,UAAU,GAAC,YAAS;MACvB,MAAMX,QAAQ,GAAC,MAAMC,KAAK,CAAC,4DAAD,CAA1B;;MACA,IAAG,CAACD,QAAQ,CAACM,EAAb,EAAgB;QACf,MAAM,IAAIC,KAAJ,CAAU,qBAAV,CAAN;MACA;;MAED,MAAMK,IAAI,GAAE,MAAMZ,QAAQ,CAACa,IAAT,EAAlB;MAEAnB,QAAQ,CAACH,gBAAgB,CAACuB,OAAjB,CAAyBF,IAAzB,CAAD,CAAR;MACAlB,QAAQ,CAACH,gBAAgB,CAACwB,aAAjB,EAAD,CAAR;IAGF,CAZD;;IAaAJ,UAAU,GAAGF,KAAb,CAAmBO,KAAK,IAAE;MACtBtB,QAAQ,CACJJ,cAAc,CAACM,gBAAf,CAAgC;QAC9BC,MAAM,EAAE,OADsB;QAE9BC,KAAK,EAAE,OAFuB;QAG9BC,OAAO,EAAC;MAHsB,CAAhC,CADI,CAAR;IAOH,CARD;EASH,CAvBD;AAwBH,CAzBO"},"metadata":{},"sourceType":"module"}